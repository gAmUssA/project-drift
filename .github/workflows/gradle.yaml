name: Gradle Build and Test

on:
  push:
    branches: [ main, master ]
    paths:
      - 'drift-schema/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'drift-schema/**'
      - '.github/workflows/**'

permissions:
  checks: write
  pull-requests: write
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./drift-schema

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

      - name: Build and Test with Coverage
        run: |
          ./gradlew clean test jacocoTestReport
          echo "Checking JaCoCo report existence..."
          ls -la build/reports/jacoco/test/
          cat build/reports/jacoco/test/jacocoTestReport.csv || echo "CSV file not found"

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: "drift-schema/build/test-results/test/*.xml"
          check_name: "Test Results"
          comment_mode: always
          compare_to_earlier_commit: true
          report_individual_runs: true

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Gradle Tests
          path: drift-schema/build/test-results/test/*.xml
          reporter: java-junit
          fail-on-error: false

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: Package
          path: drift-schema/build/libs

      - name: Create Badges Directory
        run: mkdir -p ../.github/badges

      - name: Generate JaCoCo Badge
        uses: cicirello/jacoco-badge-generator@v2
        if: always()
        with:
          generate-branches-badge: true
          jacoco-csv-file: drift-schema/build/reports/jacoco/test/jacocoTestReport.csv
          badges-directory: .github/badges
          coverage-badge-filename: jacoco.svg
          branches-badge-filename: branches.svg

      - name: Upload coverage reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: |
            drift-schema/build/reports/jacoco/
            .github/badges/

      - name: Commit and Push Coverage Badges
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
        run: |
          cd ..
          if [ -f .github/badges/jacoco.svg ] && [ -f .github/badges/branches.svg ]; then
            git config --global user.name 'github-actions[bot]'
            git config --global user.email 'github-actions[bot]@users.noreply.github.com'
            git add .github/badges/jacoco.svg .github/badges/branches.svg
            git commit -m "Update code coverage badges" || echo "No changes to commit"
            git push
          else
            echo "Coverage badges not found, skipping commit"
          fi